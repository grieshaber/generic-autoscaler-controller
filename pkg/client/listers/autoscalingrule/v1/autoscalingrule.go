/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/grieshaber/generic-autoscaler-controller/pkg/apis/autoscalingrule/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AutoscalingRuleLister helps list AutoscalingRules.
type AutoscalingRuleLister interface {
	// List lists all AutoscalingRules in the indexer.
	List(selector labels.Selector) (ret []*v1.AutoscalingRule, err error)
	// AutoscalingRules returns an object that can list and get AutoscalingRules.
	AutoscalingRules(namespace string) AutoscalingRuleNamespaceLister
	AutoscalingRuleListerExpansion
}

// autoscalingRuleLister implements the AutoscalingRuleLister interface.
type autoscalingRuleLister struct {
	indexer cache.Indexer
}

// NewAutoscalingRuleLister returns a new AutoscalingRuleLister.
func NewAutoscalingRuleLister(indexer cache.Indexer) AutoscalingRuleLister {
	return &autoscalingRuleLister{indexer: indexer}
}

// List lists all AutoscalingRules in the indexer.
func (s *autoscalingRuleLister) List(selector labels.Selector) (ret []*v1.AutoscalingRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AutoscalingRule))
	})
	return ret, err
}

// AutoscalingRules returns an object that can list and get AutoscalingRules.
func (s *autoscalingRuleLister) AutoscalingRules(namespace string) AutoscalingRuleNamespaceLister {
	return autoscalingRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AutoscalingRuleNamespaceLister helps list and get AutoscalingRules.
type AutoscalingRuleNamespaceLister interface {
	// List lists all AutoscalingRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AutoscalingRule, err error)
	// Get retrieves the AutoscalingRule from the indexer for a given namespace and name.
	Get(name string) (*v1.AutoscalingRule, error)
	AutoscalingRuleNamespaceListerExpansion
}

// autoscalingRuleNamespaceLister implements the AutoscalingRuleNamespaceLister
// interface.
type autoscalingRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AutoscalingRules in the indexer for a given namespace.
func (s autoscalingRuleNamespaceLister) List(selector labels.Selector) (ret []*v1.AutoscalingRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AutoscalingRule))
	})
	return ret, err
}

// Get retrieves the AutoscalingRule from the indexer for a given namespace and name.
func (s autoscalingRuleNamespaceLister) Get(name string) (*v1.AutoscalingRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("autoscalingrule"), name)
	}
	return obj.(*v1.AutoscalingRule), nil
}
